modules = ["python-3.11"]

[nix]
channel = "stable-24_05"

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Flask Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Database Verification"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Run Course Creation Tests"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Create and Apply Migrations"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Check Migration File"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Initialize Migrations"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Create Migration"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Apply Migration"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Check Database Schema"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Recreate Database"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Run Course and Lesson Tests"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Check Database and Migrations"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Check and Apply Migrations"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Verify Database Schema"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start Flask App"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Create and Apply Migration"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Create Initial Migration"

[[workflows.workflow]]
name = "Flask Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"
waitForPort = 5000

[[workflows.workflow]]
name = "Database Verification"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """
sqlite3 instance/educational_platform.db '.tables' && echo '
User table schema:' && sqlite3 instance/educational_platform.db '.schema user' && echo '
Course table schema:' && sqlite3 instance/educational_platform.db '.schema course'"""

[[workflows.workflow]]
name = "Run Course Creation Tests"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -m unittest test_course_creation.py"

[[workflows.workflow]]
name = "Create and Apply Migrations"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "flask db migrate -m 'Initial migration' && flask db upgrade"

[[workflows.workflow]]
name = "Check Migration File"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "ls -t migrations/versions/*.py | head -n 1 | xargs cat"

[[workflows.workflow]]
name = "Initialize Migrations"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "flask db init"

[[workflows.workflow]]
name = "Create Migration"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "flask db migrate -m 'Create Lessons table and establish relationship with Courses'"

[[workflows.workflow]]
name = "Apply Migration"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "flask db upgrade"

[[workflows.workflow]]
name = "Check Database Schema"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sqlite3 instance/educational_platform.db '.tables' && sqlite3 instance/educational_platform.db '.schema user' && sqlite3 instance/educational_platform.db '.schema course' && sqlite3 instance/educational_platform.db '.schema lesson'"

[[workflows.workflow]]
name = "Recreate Database"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python manage.py recreate_db"

[[workflows.workflow]]
name = "Run Course and Lesson Tests"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -m unittest test_course_and_lesson.py"

[[workflows.workflow]]
name = "Check Database and Migrations"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "ls -l instance/educational_platform.db && flask db current"

[[workflows.workflow]]
name = "Check and Apply Migrations"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "flask db current && flask db upgrade"

[[workflows.workflow]]
name = "Verify Database Schema"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """
sqlite3 instance/educational_platform.db '.tables' && echo '
User table schema:' && sqlite3 instance/educational_platform.db '.schema user' && echo '
Course table schema:' && sqlite3 instance/educational_platform.db '.schema course' && echo '
Lesson table schema:' && sqlite3 instance/educational_platform.db '.schema lesson'"""

[[workflows.workflow]]
name = "Start Flask App"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"
waitForPort = 5000

[[workflows.workflow]]
name = "Create and Apply Migration"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "flask db migrate -m 'Add is_admin field to User model' && flask db upgrade"

[[workflows.workflow]]
name = "Create Initial Migration"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "flask db migrate -m 'Initial migration'"

[deployment]
run = ["sh", "-c", "python main.py"]

[[ports]]
localPort = 5000
externalPort = 80
